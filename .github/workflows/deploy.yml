name: AI Quiz (Django) Testing and Deployment to DigitalOcean Droplet

on:
  push:
    branches: [ "test" ] # Only run when pushing to the "test" branch

jobs:
  build:

    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: aiquiz
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    strategy:
      max-parallel: 4
      matrix:
        python-version: ["3.10", "3.12"]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run tests
        run: python manage.py test

      - name: Setup SSH Key
        env:
          Key: ${{ secrets.DROPLET_SSH_KEY }}
          Address: ${{ secrets.DROPLET_IP }}
        run: |
          mkdir -p ~/.ssh
          echo "$Key" > ~/.ssh/id_ed25519
          chmod 600 ~/.ssh/id_ed25519

      - name: Debug SSH Key
        run: |
          ls -lah ~/.ssh/
          cat ~/.ssh/id_ed25519 || echo "SSH key not found or cannot be read!"

      - name: Debug Address Variable
        run: echo "Connecting to $Address"
        
      - name: Call Droplet with SSH Key
        run: |
          ssh-keyscan -p 50000 "$Address" >> ~/.ssh/known_hosts
      
      


      - name: Deploy via SSH to DigitalOcean Droplet
        env:
          Address: ${{ secrets.DROPLET_IP }}
        if: success()  # Deploy only if tests pass
        run: |
          ssh -i ~/.ssh/id_ed25519 -p 50000 root@$Address << 'EOF'
          cd /root/home/FinalProjectFOLK
          git pull origin test
          source venv/bin/activate
          pip install -r requirements.txt
          python manage.py migrate
          python manage.py collectstatic --noinput
          sudo systemctl restart daphne
          sudo systemctl restart nginx
          EOF
